" Capitalize words
map! <c-f> <esc>gUiw`]a
"This doesn't use a mark. Explanation:
    "^[    Leave insert mode
    "gU    Make uppercase...
    "iw    the "inner" word (:help text-objects)
    "`]    Go to the end of the operated text
    "a     Back to insert mode

" map <F3>      :so $CVIMSYN/engspchk.vim

map [20~ <f9>
map! [20~ <f9>

nnoremap <silent> <f5>   :Make<cr>
nnoremap <silent> <f6>   :Make clean \| cclose<cr>
nnoremap <silent> <f7>   :cp<cr>
nnoremap <silent> <f8>   :cn<cr>

nnoremap <silent> <f9>   :set hls!<cr>
inoremap <silent> <f9>   <c-o>:set hls!<cr>
nnoremap <silent> <f10>  :so session.vim<cr>

set pastetoggle=[23~
nnoremap <silent> [23~  :set invpaste<cr>
"inoremap <silent> <f11>  <c-o>:set invpaste<cr>

nnoremap <LocalLeader>cd :lcd %:p:h<cr>
vnoremap <LocalLeader>l  <esc>:let a=line("'>")<cr>:let b=line("'<")<cr>:echo a-b+1<cr>

" I don't like the default behavior of shift-up and down when in visual mode...
map  <s-up>   ""
imap <s-up>   ""

map  <s-down> ""
imap <s-down> ""

" automatic pasting in the gui
inoremap <MiddleMouse> <c-o>:set paste<cr><MiddleMouse><c-o>:set nopaste<cr>

" allow the . to execute once for each line of a visual selection 
vnoremap . :normal . <cr>

" make ~ execute the contents of the a register 
nnoremap <s-f1> @a 
vnoremap <s-f1> :normal @a<cr> 

" move between open windows
map W <c-w>w

" Move Window to Top/Btm/Left/Right with CTRL-W CTRL-SHIFT-CURSOR
map <c-s-left>  H
map <c-s-down>  J
map <c-s-up>    K
map <c-s-right> L

" Sadly, I'm used to some Emacs bindings
map <c-a> <Home>
map <c-e> <End>
map! <c-a> <Home>
map! <c-e> <End>

" Allow p to paste current copy buffer onto currently selected text.
vnoremap p <Esc>:let current_reg = @"<CR>gvdi<C-R>=current_reg<CR><Esc>

" Provide undo/redo in insert mode.
inoremap <c-u> <c-o>u
inoremap <c-r> <c-o><c-r>

" Make tab behave like <c-p> if used when by a keyworkd, if not, then it
" insert a <tab>
inoremap <silent> <s-tab> <c-r>=InsertTabWrapper("forward")<cr>
inoremap <silent> <tab>   <c-r>=InsertTabWrapper("backward")<cr>

" provide easier 'normal mode acccess' while editing
inoremap [[A <c-o>

" I always mess up and hit c-p
inoremap <c-p> <c-[>

" I hate it when left and write beep...
nnoremap <silent> <Left>  :call WrapLeft()<cr>
nnoremap <silent> <Right> :call WrapRight()<cr>
nnoremap <silent> h       :call WrapLeft()<cr>
nnoremap <silent> l       :call WrapRight()<cr>

nnoremap j gj
nnoremap k gk
nnoremap <up> gk
nnoremap <down> gj
inoremap <up> <c-o>gk
inoremap <down> <c-o>gj

inoremap <c-\> <c-o>:set tags=/Users/bpm/playground/mojo.rtags/rtags<cr><c-o>:tj <c-r>=expand("<cword>")<cr><cr>
inoremap <c-]> <c-o>:set tags=/Users/bpm/playground/mojo.rtags/tags<cr><c-o>:tj <c-r>=expand("<cword>")<cr><cr>

nnoremap <c-\> :set tags=/Users/bpm/playground/mojo.rtags/rtags<cr>:tj <c-r>=expand("<cword>")<cr><cr>
nnoremap <c-]> :set tags=/Users/bpm/playground/mojo.rtags/tags<cr>:tj <c-r>=expand("<cword>")<cr><cr>

map OH <Home>
map OF <End>
map! OH <Home>
map! OF <End>

map [5~ <PageUp>
map [6~ <PageDown>
map! [5~ <PageUp>
map! [6~ <PageUp>

map [3~ <Del>
map! [3~ <Del>

map OA <Up>
map! OA <Up>
map OB <Down>
map! OB <Down>
map OD <Left>
map! OD <Left>
map OC <Right>
map! OC <Right>

map Â #
map! Â #
